@import url('https://fonts.googleapis.com/css2?family=Grechen+Fuemen&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

h1 {
    font-family: "Grechen Fuemen", serif;
    font-weight: 400;
    font-style: normal;
}

body {
    font-family: 'Inter', sans-serif;
}

/* Variables CSS pour la cohérence des couleurs */
:root {
    --primary-green: #22c55e;
    --primary-green-hover: #16a34a;
    --primary-green-dark: #15803d;
    --secondary-blue: #3b82f6;
    --secondary-blue-hover: #2563eb;
    --accent-yellow: #fbbf24;
    --accent-red: #ef4444;
    --glass-bg: rgba(255, 255, 255, 0.1);
    --glass-border: rgba(255, 255, 255, 0.2);
    --shadow-soft: 0 4px 20px rgba(0, 0, 0, 0.1);
    --shadow-medium: 0 8px 32px rgba(0, 0, 0, 0.15);
    --shadow-strong: 0 16px 48px rgba(0, 0, 0, 0.2);
    --border-radius: 12px;
    --border-radius-lg: 16px;
    --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.gridAnim {
    position: fixed;
    top: 50%;
    left: 50%;
    width: 200%;
    height: 200dvh;
    background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
    z-index: -1;
    background-image:
        linear-gradient(rgba(255, 255, 255, 0.1) 1px, transparent 1px),
        linear-gradient(90deg, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
    background-size: 40px 40px;
    transform: translate(-50%, -50%) rotateZ(15deg);
    opacity: 0.4;
    animation: pulseGrid 6s ease-in-out infinite;

    mask-image: radial-gradient(circle, rgba(255, 255, 255, 0.9) 20%, rgba(255, 255, 255, 0.3) 60%, transparent 80%);
    -webkit-mask-image: radial-gradient(circle, rgba(255, 255, 255, 0.9) 20%, rgba(255, 255, 255, 0.3) 60%, transparent 80%);
}

@keyframes pulseGrid {
    0% {
        opacity: 0.2;
        filter: brightness(1);
        transform: translate(-50%, -50%) rotateZ(15deg) scale(1);
    }

    50% {
        opacity: 0.4;
        filter: brightness(1.4);
        transform: translate(-50%, -50%) rotateZ(15deg) scale(.9);
    }

    100% {
        opacity: 0.2;
        filter: brightness(1);
        transform: translate(-50%, -50%) rotateZ(15deg) scale(1);
    }
}

.actionButton {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    gap: 1rem;
    padding: 0 1rem;
}

.actionButton button,
.actionButton input {
    position: relative;
    overflow: hidden;
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(10px);
    box-shadow: var(--shadow-medium);
    height: clamp(48px, 5vh, 60px);
    width: clamp(200px, 30vh, 300px);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--border-radius);
    border: 1px solid var(--glass-border);
    transition: var(--transition);
    font-weight: 500;
    font-size: clamp(14px, 1.5vh, 16px);
}

@media (max-width: 768px) {
    .actionButton {
        flex-direction: column;
        width: 100%;
        max-width: 320px;
        margin: 0 auto;
    }
    
    .actionButton button,
    .actionButton input {
        width: 100%;
        min-height: 48px;
    }
}

.actionButton button .arrow {
    position: relative;
    overflow: hidden;
    width: 0;
    transition: .2s;
    transition-delay: .1s;
}

.actionButton button:not(.valid):hover .arrow {
    transform: rotate(0);
    width: 3vh;
}

.actionButton button::after {
    position: absolute;
    content: '';
    transform: translate(0, -50%);
    z-index: 1;
    top: 50%;
    left: 0;
    width: 0;
    height: 100%;
    background: linear-gradient(90deg, var(--primary-green), var(--secondary-blue));
    opacity: 0.2;
    transition: var(--transition);
    border-radius: var(--border-radius);
}

.actionButton button:hover::after {
    width: 100%;
}

.actionButton button:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-strong);
}

.footer {
    position: fixed;
    bottom: 10px;
    opacity: .5;
}

.JoinGame:not(.selected) {
    opacity: 0;
    width: 0 !important;
    padding: 0 !important;
    margin: 0 !important;
    transition: .2s;
    overflow: hidden;
}

* {
    white-space: nowrap;
}

.JoinGame.selected {
    transition: .2s;
    opacity: 1;
    width: 30vh !important;
}

input.JoinGame.selected {
    transition: .2s;
    width: 40vh !important;
}

.createGame {
    transition: .2s;
}

.createGame.valid {
    width: 12vh !important;
}

.numberSelect {
    background: linear-gradient(135deg, var(--accent-yellow), #f59e0b) !important;
    border: 2px solid var(--accent-yellow) !important;
    color: #1f2937 !important;
    font-weight: 700 !important;
    transform: scale(1.05) !important;
    box-shadow: 0 0 20px rgba(251, 191, 36, 0.4) !important;
}

.lastNumberSelect {
    background: linear-gradient(135deg, var(--primary-green), var(--primary-green-dark)) !important;
    border: 2px solid var(--primary-green) !important;
    color: white !important;
    font-weight: 700 !important;
    transform: scale(1.1) !important;
    box-shadow: 0 0 30px rgba(34, 197, 94, 0.6) !important;
    animation: glow 2s ease-in-out infinite alternate !important;
    z-index: 10 !important;
    position: relative !important;
}

@keyframes glow {
    from {
        box-shadow: 0 0 20px rgba(34, 197, 94, 0.4);
    }
    to {
        box-shadow: 0 0 40px rgba(34, 197, 94, 0.8);
    }
}

/* Animations pour les particules flottantes */
@keyframes blob {
    0% {
        transform: translate(0px, 0px) scale(1);
    }
    33% {
        transform: translate(30px, -50px) scale(1.1);
    }
    66% {
        transform: translate(-20px, 20px) scale(0.9);
    }
    100% {
        transform: translate(0px, 0px) scale(1);
    }
}

.animate-blob {
    animation: blob 7s infinite;
}

.animation-delay-2000 {
    animation-delay: 2s;
}

.animation-delay-4000 {
    animation-delay: 4s;
}

/* Amélioration des styles généraux */
.container {
    padding-left: 1rem;
    padding-right: 1rem;
}

@media (min-width: 640px) {
    .container {
        padding-left: 2rem;
        padding-right: 2rem;
    }
}

/* Amélioration des tooltips */
[title] {
    position: relative;
}

[title]:hover::after {
    content: attr(title);
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(0, 0, 0, 0.9);
    color: white;
    padding: 0.5rem 0.75rem;
    border-radius: 0.375rem;
    font-size: 0.75rem;
    white-space: nowrap;
    z-index: 1000;
    margin-bottom: 0.5rem;
    opacity: 0;
    animation: fadeIn 0.3s ease-in-out forwards;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateX(-50%) translateY(4px);
    }
    to {
        opacity: 1;
        transform: translateX(-50%) translateY(0);
    }
}

.selectedFilter {
    position: relative;
    width: 3vh;
    height: 1vh;
}

.selectedFilter::before {
    position: absolute;
    content: '';
    width: 1vh;
    height: 1vh;
    background-color: #ffffff5e;
    border-radius: 1vh;
    transition: width .2s;
}

.selected .selectedFilter::before {
    position: absolute;
    content: '';
    width: 2.5vh;
    height: .7vh;
    background-color: #00ff005e;
    border-radius: 1vh;
    transform: translate(0, -50%);
    top: 50%;
}

.listUsers {
    list-style: none;
    padding: 0;
    margin: 0;
}

.listUsers li {
    padding: 0;
    margin: 0;
    cursor: pointer;
}
.selected {
    background-color: #005e003c;
}

.listUsers li:hover {
    background-color: #00ab003c;
}
.Carton-cell {
    position: relative;
    border: 1px solid #ffffff98;
}

.Carton-cell.vide::before {
    position: absolute;
    content: '';
    width: 80%;
    height: 80%;
    background-color: #ffffff30;
    border-top-left-radius: 2vh;
    border-bottom-right-radius: 2vh;
}

/* Carton Style */
.Carton {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    width: 100%;
    max-width: 400px;
    height: calc(var(--height) * 3);
    margin: 15px auto;
    background: var(--glass-bg);
    -webkit-backdrop-filter: blur(15px);
    backdrop-filter: blur(15px);
    border: 1px solid var(--glass-border);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-medium);
    transition: var(--transition);
    overflow: hidden;
}

.Carton:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-strong);
}

.Carton-row {
    position: relative;
    display: flex;
    align-items: center;    
    justify-content: center;
    width: 100%;
    height: var(--height);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.Carton-row:last-child {
    border-bottom: none;
}

.Carton-cell {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: var(--height);
    border-right: 1px solid rgba(255, 255, 255, 0.1);
    transition: var(--transition);
}

.Carton-cell:last-child {
    border-right: none;
}

.Carton-cell:hover {
    background: rgba(255, 255, 255, 0.05);
}

@media (max-width: 768px) {
    .Carton {
        margin: 10px;
        max-width: calc(100vw - 40px);
        min-height: 250px;
        padding: 8px;
    }
    
    .Carton-row {
        height: 70px;
    }
    
    .Carton-cell input {
        font-size: clamp(12px, 1.8vh, 16px);
    }
}

/* Styles pour les cellules sélectionnées */
.selected-cell {
    position: relative;
    background: rgba(34, 197, 94, 0.1);
    border-color: rgba(34, 197, 94, 0.3) !important;
}

.selected-cell::after {
    content: '';
    position: absolute;
    inset: 2px;
    background: linear-gradient(135deg, rgba(34, 197, 94, 0.2), rgba(34, 197, 94, 0.1));
    border-radius: 6px;
    pointer-events: none;
}

/* Amélioration des animations */
.Carton {
    animation: slideIn 0.5s ease-out forwards;
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(20px) scale(0.95);
    }
    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

/* Styles pour les numéros en mode view */
.Carton-cell span {
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
}

/* Amélioration des placeholders */
.Carton-cell input::placeholder {
    font-size: 10px;
    font-weight: 400;
    opacity: 0.6;
}

/* Styles pour les tooltips améliorés */
@media (hover: hover) {
    [title]:hover::after {
        animation: tooltipFadeIn 0.2s ease-out forwards;
    }
}

@keyframes tooltipFadeIn {
    from {
        opacity: 0;
        transform: translateX(-50%) translateY(8px);
    }
    to {
        opacity: 1;
        transform: translateX(-50%) translateY(0);
    }
}

/* Styles pour la checkbox personnalisée */
.custom-checkbox {
    appearance: none;
    -webkit-appearance: none;
    width: 18px;
    height: 18px;
    border: 2px solid #4b5563;
    border-radius: 4px;
    background-color: #1f2937;
    position: relative;
    cursor: pointer;
    transition: all 0.2s ease;
}

.custom-checkbox:checked {
    background-color: #16a34a;
    border-color: #16a34a;
}

.custom-checkbox:checked::after {
    content: '✓';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 12px;
    font-weight: bold;
}

.custom-checkbox:hover {
    border-color: #16a34a;
    background-color: #374151;
}

.custom-checkbox:focus {
    outline: none;
        box-shadow: 0 0 0 2px rgba(34, 197, 94, 0.5);
}

.Carton-cell input {
    background: transparent;
    border: none;
    outline: none;
    color: white;
    font-weight: 600;
    font-size: clamp(14px, 2vh, 18px);
    text-align: center;
    width: 100%;
    height: 100%;
    transition: var(--transition);
}

.Carton-cell input:focus {
    background: rgba(var(--primary-green), 0.2);
    color: #22c55e;
}

.Carton-cell input::placeholder {
    color: rgba(255, 255, 255, 0.4);
}

.isSelected::before {
    position: absolute;
    transform: translate(-50%, -50%);
    top: 50%;
    left: 50%;
    content: '';
    width: 85%;
    height: 85%;
    background: radial-gradient(circle, var(--primary-green) 0%, var(--primary-green-dark) 100%);
    border-radius: 50%;
    animation: pulse 2s infinite;
    box-shadow: 0 0 20px rgba(34, 197, 94, 0.6);
}

@keyframes pulse {
    0% {
        transform: translate(-50%, -50%) scale(0.9);
        opacity: 0.8;
    }
    50% {
        transform: translate(-50%, -50%) scale(1.1);
        opacity: 1;
    }
    100% {
        transform: translate(-50%, -50%) scale(0.9);
        opacity: 0.8;
    }
}